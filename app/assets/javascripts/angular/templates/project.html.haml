.project{ ng: {repeat: "project in projects"} }
  .project_block{ng: {mouseenter: 'projectToolbar = true', mouseleave: 'projectToolbar = false'}}
    .project_info
      %span.glyphicon.glyphicon-th-list
      %strong.project_title{ng: {if: "!project.editProject"}} {{project.title}}
    %form.edit_project.form-inline{name: "projectForm", ng: {submit: 'updateProject(project)', if: "project.editProject"}}
      %input.edit_project_input.form-control.input-sm{type: "text", ng: {model: 'projectData.title'}, placeholder: "#{I18n.t('project.change_title')}", required: true}
      %input.btn.btn-success.btn-sm{type: "submit", value: "#{I18n.t('project.submit_change')}", ng: {click: 'editProject = false', disabled: 'projectForm.$invalid'}}
    .project_toolbar{ng: {show: "projectToolbar"}}
      %span.glyphicon.glyphicon-pencil.edit_project_img{ng: {click: 'showEditForm(project)'}}
      %span.glyphicon.glyphicon-trash.del_project_img{ng: {click: "deleteProject(project, $index)"}}
  .add_task_block
    %span.glyphicon.glyphicon-plus.img_plus_task
    %form.add_task.form-inline{name: "taskForm", ng: {controller: 'TasksController', submit: "createTask(project)",disabled: 'taskForm.$invalid'}}
      %input.form-control.input-sm.add_task_input{type: "text", placeholder: "#{I18n.t('project.add_task')}", ng: {model: 'taskData.title'}, required: true}
      %input.form-control.input-sm.add_task_input_date{type: "date", ng: {model: 'taskData.deadline'}, required: true}
      %input.btn.btn-success.btn-sm.add_task_button{type: "submit", value: "#{I18n.t('project.submit_add_task')}", ng: {disabled: 'taskForm.$invalid'}}
  %ul.task_list{"ui-sortable" => "sortableOptions", ng: {include: "'angular/templates/task.html'", controller: "TasksController", model: "project.tasks"}}
